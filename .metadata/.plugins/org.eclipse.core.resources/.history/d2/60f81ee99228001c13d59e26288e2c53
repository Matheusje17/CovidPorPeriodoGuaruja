package performanceAnalyze;

import java.util.List;

import controller.ObitoController;
import model.Obito;


public class QuickSort {
	ObitoController oc = new ObitoController();
	
	private int esq = 0; 
	private int dir = oc.listaObitos().size(); 
	
	public void posicoes() {
		
	}
	
	
	public List<Obito> quickSort(List<Obito> obitos) {
		
		int esq = 0;
		int dir = obitos.size() -1;
		
		if (obitos.get(esq).getQuantidade() < obitos.get(dir).getQuantidade()) {
			Obito aux = separar(obitos, esq, dir);
			quickSort(obitos);
			quickSort(obitos, j+1, dir);
			
		}
		
		
		
		return obitos;
		
	}
	private Obito separar(List<Obito >obitos, int esq, int dir) {
		Obito o1 = new obito(obitos.ge)
		
		int i = esq+1;
		int j = dir;
		int pivo = v[esq];
		while (i <= j) {
			if(v[i] <= pivo) i++;
			else if(v[j] > pivo) j--;
			else if (i <= j) {
				trocar(v, i, j);
				i++;
				j--;
			}
		}
		trocar (v, esq, j);
		return j;
	}
	private static void trocar(int[] v, int i, int j) {
		int aux = v[i];
		v[i] = v[j];
		v[j] = aux;
		
	}
}
